.ip-header {
    position: fixed;
    top: 0;
    z-index: 100;
    min-height: 480px;
    width: 100%;
    height: 100%;
    background: #f1f1f1;
}

.ip-loader {
    position: absolute;
    left: 0;
    width: 100%;
    opacity: 0;
    cursor: default;
    pointer-events: none;
}

.ip-loader {
    top: 40%;
}

.ip-header .ip-inner {
    display: block;
    margin: 0 auto;
}

.ip-header .ip-loader svg path {
    fill: none;
    stroke-width: 6;
}

.ip-header .ip-loader svg path.ip-loader-circlebg {
    stroke: #ddd;
}

.ip-header .ip-loader svg path.ip-loader-circle {
    transition: stroke-dashoffset 0.2s;
    stroke: #ef6e7e;
}

/* Animations */

/* Initial animation of header elements */
.loading .ip-loader {
    opacity: 1;
    animation: animInitialHeader 1s cubic-bezier(0.7,0,0.3,1) both;
}

.loading .ip-loader {
    animation-delay: 0.2s;
}

@keyframes animInitialHeader {
    from {
        opacity: 0;
        transform: translate3d(0,800px,0);
    }
}

/* Header elements when loading finishes */
.loaded .ip-loader {
    opacity: 1;
}

.loaded .ip-loader {
    animation: animLoadedLoader 0.5s cubic-bezier(0.7,0,0.3,1) forwards;
}

@keyframes animLoadedLoader {
    to {
        opacity: 0;
        transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1);
    }
}

/* Header animation when loading finishes */
.loaded .ip-header {
    animation: animLoadedHeader 1s cubic-bezier(0.7,0,0.3,1) forwards;
}

@keyframes animLoadedHeader {
    to {
        transform: translate3d(0,-100%,0);
    }
}

/* Content animations */
.loaded .site-header,
.loaded .site-content {
    animation: animLoadedContent 1s cubic-bezier(0.7,0,0.3,1) both;
}

@keyframes animLoadedContent {
    from {
        opacity: 0;
        transform: translate3d(0,200px,0);
    }
}

/* Change layout class for header */
.layout-switch .ip-header {
    position: absolute;
}