.row {
	display: flex;
	flex-flow: row wrap;
	margin: 0 auto;
	max-width: $grid-width;
}

.column {
	display: inline-block; // In IE 10, setting -ms-flex-flow: row wrap will not wrap unless display: inline-block is set on child elements.
	list-style: none; // Need when added this class to li
	margin-left: $grid-gutter / 2;
	margin-right: $grid-gutter / 2;
}

.column-top {
	align-self: flex-start;
}

.column-middle {
	align-self: center;
}

.column-bottom {
	align-self: flex-end;
}

.column-stretch {
	align-self: stretch;
}

// Mixins for width calculation.
@mixin partial-size($size, $columns, $gutter) {
	width: #{(($size / $columns) * 100)+"%"};

	&.column {
		width: calc(#{(($size / $columns) * 100)+"%"} - #{$gutter});
	}
}

@mixin full-size($gutter) {
	@include partial-size(1, 1, $gutter);
}

////////// Phone //////////

@media (max-width: $grid-medium-breakpoint - 1) {

	.hide-for-small {
		display: none !important;
	}

	// Define partial sizes for columnNumber < totalColumns.
	@for $i from 1 through ($grid-columns) {
		.small-#{$i} {
			@include partial-size($i, $grid-columns, $grid-gutter);
		}
	}
}

////////// Tablet //////////

@media (min-width: $grid-medium-breakpoint) and (max-width: $grid-large-breakpoint - 1) {

	.hide-for-medium {
		display: none !important;
	}

	// Define partial sizes for columnNumber < totalColumns.
	@for $i from 1 through ($grid-columns) {
		.medium-#{$i} {
			@include partial-size($i, $grid-columns, $grid-gutter);
		}
	}
}

////////// Desktop //////////

@media (min-width: $grid-large-breakpoint) {

	.hide-for-large {
		display: none !important;
	}

	// Define partial sizes for all numbers of columns.
	@for $i from 1 through $grid-columns {
		.large-#{$i} {
			@include partial-size($i, $grid-columns, $grid-gutter);
		}
	}

}